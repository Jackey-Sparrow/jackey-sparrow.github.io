var globalSettings = {appName: "hiApp"};
angular.module(globalSettings.appName, ["ionic", "pascalprecht.translate"]).run(function (t) {
    t.ready(function () {
        window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard && (cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0), cordova.plugins.Keyboard.disableScroll(!0)), window.StatusBar && StatusBar.styleLightContent()
    })
}).config(function (t, e) {
    t.state("login", {
        url: "/login",
        templateUrl: "js/login/templates/login.html",
        controller: "loginController"
    }).state("tab", {
        url: "/tab",
        "abstract": !0,
        templateUrl: "templates/tabs.html"
    }).state("tab.tweet", {
        url: "/tweet",
        views: {"tab-tweet": {templateUrl: "js/tweet/templates/tweet.html", controller: "tweetController"}}
    }).state("tab.tweet-detail", {
        url: "/tweet/:tweetId",
        views: {"tab-tweet": {templateUrl: "js/tweet/templates/tweet-detail.html", controller: "tweetDetailController"}}
    }).state("tab.contacts", {
        url: "/contacts",
        views: {"tab-contacts": {templateUrl: "js/contacts/templates/contacts.html", controller: "contactsController"}}
    }).state("tab.contact-detail", {
        url: "/contacts/:contactId",
        views: {
            "tab-contacts": {
                templateUrl: "js/contacts/templates/contact-detail.html",
                controller: "contactDetailController"
            }
        }
    }).state("tab.setting", {
        url: "/setting",
        views: {"tab-setting": {templateUrl: "js/setting/templates/setting.html", controller: "settingController"}}
    }).state("tab.changeLanguage", {
        url: "/setting/:changeLanguage",
        views: {
            "tab-setting": {
                templateUrl: "js/language/templates/change-language.html",
                controller: "changeLanguageController"
            }
        }
    }), e.otherwise("/login")
}).config(function (t) {
    t.translations("en", {
        common: {systemInfo: "system info"},
        login: {userName: "UserName", password: "Password", language: "Language", login: "Login", error: ""},
        tweet: {tweetName: "Tweet", like: "Like", comments: "Comments", comment: "Comment", share: "Share"},
        contacts: {contactsName: "Contacts", search: "Search"},
        setting: {
            settingName: "Setting",
            feekback: "Feekback",
            update: "Update",
            language: "Language",
            about: "About",
            logout: "Log out"
        },
        language: {english: "English", chinese: "Chinese"}
    }), t.translations("cn", {
        common: {
            systemInfo: "系统消息",
            about: "Jackey Sparrow \n  Github:https://github.com/Jackey-Sparrow"
        },
        login: {userName: "用户名", password: "密码", language: "语言", login: "登录", error: ""},
        tweet: {tweetName: "推特", like: "赞", comments: "评论", comment: "评论", share: "分享"},
        contacts: {contactsName: "通讯录", search: "搜索"},
        setting: {settingName: "设置", feekback: "意见返馈", update: "检测更新", language: "切换语言", about: "关于我们", logout: "登出"},
        language: {english: "英文", chinese: "中文"}
    });
    var e = "en", a = JSON.parse(localStorage.getItem("hiAppUserInfo")) || [];
    a && a.languageTranslate && (e = a.languageTranslate), t.preferredLanguage(e)
});
!function (n) {
    "use strict";
    n.module(globalSettings.appName).factory("basicControllerService", ["$ionicLoading", "$ionicPopup", function (n, o) {
        var i = {};
        return i.initController = function (i) {
            i.showLoading = function () {
                n.show({template: '<ion-spinner class="spinner-light"></ion-spinner>'})
            }, i.hideLoading = function () {
                n.hide()
            }, i.showMessage = function (n, e) {
                i.popUp = o.alert({title: n, template: '<div class="messageBody">' + e + "</div>", scope: i})
            }, i.$on("$destroy", function () {
                i.popUp && i.popUp.remove()
            })
        }, i
    }])
}(angular);
!function (n) {
    "use strict";
    n.module(globalSettings.appName).factory("localStorageService", ["$window", function (n) {
        var r = {}, o = function (r, o) {
            n.localStorage[r] = JSON.stringify(o)
        }, t = function (r) {
            var o = n.localStorage[r];
            return o ? JSON.parse(o) : null
        };
        return r.setUserInfo = function (n) {
            o("hiAppUserInfo", n)
        }, r.getUserInfo = function () {
            return t("hiAppUserInfo")
        }, r
    }])
}(angular);
!function (o) {
    "use strict";
    o.module(globalSettings.appName).factory("platformModal", ["$ionicModal", function (o) {
        var a, e = {};
        return e.openModal = function (e) {
            a = e.scope, o.fromTemplateUrl(e.templateUrl, {
                scope: e.scope,
                animation: "slide-in-up"
            }).then(function (o) {
                a.modal = o, o.show()
            })
        }, e.hideModal = function () {
            a.modal.hide(), a.modal && delete a.modal
        }, e
    }])
}(angular);
!function (e) {
    "use strict";
    e.module(globalSettings.appName).factory("languageService", ["$translate", "localStorageService", function (e, a) {
        var n = {}, g = [{
            LanguageId: 1,
            LanguageName: e.instant("language.english"),
            language: "en",
            culture: "en-gb",
            languageTranslate: "en",
            selected: !1
        }, {
            LanguageId: 2,
            LanguageName: e.instant("language.chinese"),
            language: "cn",
            culture: "en-gb",
            languageTranslate: "cn",
            selected: !1
        }];
        return n.getList = function () {
            var e = a.getUserInfo();
            if (e) {
                var n = e.languageId;
                this.getLanguageById(n)
            }
            return g
        }, n.getLanguageById = function (e) {
            for (var a = g.length, n = 0; a > n; n++) {
                var t = g[n];
                if (t.LanguageId === e)return t.selected = !0, t;
                t.selected = !1
            }
        }, n.refreshLanguage = function () {
            g[0].LanguageName = e.instant("language.english"), g[1].LanguageName = e.instant("language.chinese")
        }, n
    }])
}(angular);
!function (a) {
    "use strict";
    a.module(globalSettings.appName).controller("changeLanguageController", ["$scope", "$state", "languageService", "localStorageService", "$translate", "$timeout", function (a, e, g, n, t, o) {
        a.languages = g.getList();
        var l = n.getUserInfo();
        l || e.go("login"), a.changeLanguage = function (e) {
            a.chooseLanguage = g.getLanguageById(e), t.use(a.chooseLanguage.languageTranslate);
            var o = a.chooseLanguage;
            l.languageId = o.LanguageId, l.language = o.language, l.languageName = o.languageName, l.languageTranslate = o.languageTranslate, n.setUserInfo(l)
        }, a.done = function () {
            window.location.reload(!0), e.go("tab.setting")
        }, a.back = function () {
            e.go("tab.setting")
        }
    }])
}(angular);
!function (a) {
    "use strict";
    a.module(globalSettings.appName).controller("loginController", ["$scope", "$state", "$http", "loginService", "$translate", "basicControllerService", "languageService", "localStorageService", function (a, e, n, g, l, o, s, i) {
        a.login = {
            userName: "",
            password: "",
            error: "",
            languageId: 1,
            userNameLabel: l.instant("login.userName"),
            passwordLabel: l.instant("login.password"),
            languageLabel: l.instant("login.language"),
            loginLabel: l.instant("login.login"),
            loginFn: function () {
                var n = a.chooseLanguage;
                a.showLoading(), setTimeout(function () {
                    i.setUserInfo({
                        userName: a.login.userName,
                        password: a.login.password,
                        languageId: n.LanguageId,
                        language: n.language,
                        languageName: n.LanguageName,
                        languageTranslate: n.languageTranslate
                    }), a.hideLoading(), e.go("tab.tweet")
                }, 2e3)
            }
        };
        var t = i.getUserInfo();
        t && (a.login.userName = t.userName, a.login.password = t.password, a.login.languageId = t.languageId), a.chooseLanguage = s.getLanguageById(a.login.languageId), o.initController(a), a.languages = s.getList(), a.changeLanguage = function () {
            a.chooseLanguage = s.getLanguageById(a.login.languageId), l.use(a.chooseLanguage.languageTranslate), a.login.userNameLabel = l.instant("login.userName"), a.login.passwordLabel = l.instant("login.password"), a.login.languageLabel = l.instant("login.language"), a.login.loginLabel = l.instant("login.login"), s.refreshLanguage()
        }
    }]), a.module(globalSettings.appName).factory("loginService", [function () {
        return null
    }])
}(angular);
!function (e) {
    "use strict";
    e.module(globalSettings.appName).factory("tweetCommentService", ["$http", "$q", function (e, t) {
        var n = {}, o = [];
        return n.getCommentByTweetId = function (n) {
            var r = t.defer();
            return e.get("js/tweet/comments.json").then(function (e) {
                o = e.data;
                var t = o.filter(function (e) {
                    return e.tweetId === n
                });
                r.resolve(t)
            }, function (e) {
                console.log(e), r.reject(e)
            }), r.promise
        }, n
    }])
}(angular);
!function (t) {
    "use strict";
    t.module(globalSettings.appName).factory("tweetService", ["$q", "$http", function (t, e) {
        var n = {}, r = [];
        return n.setList = function (t) {
            r = t
        }, n.getList = function () {
            return r
        }, n.getTweetById = function (t) {
            var e = r.filter(function (e) {
                return e.id === t
            });
            return e.length ? e[0] : null
        }, n.getTweetByPagination = function (n) {
            var r = n.pageNumber, i = n.pageSize, o = r * i, u = (r + 1) * i, a = t.defer();
            return e.get("js/tweet/tweet.json").then(function (t) {
                a.resolve(t.data.slice(o, u))
            }, function (t) {
                console.log(t)
            }), a.promise
        }, n
    }])
}(angular);
!function (t) {
    "use strict";
    t.module(globalSettings.appName).controller("addTweetController", ["$scope", function (t) {
        t.title = "add tweet", t.back = function () {
            t.modalFn.hideModal()
        }
    }])
}(angular);
!function (e) {
    "use strict";
    e.module(globalSettings.appName).controller("tweetController", ["$scope", "basicControllerService", "platformModal", "tweetService", "$translate", "$timeout", "$ionicScrollDelegate", function (e, t, o, n, a, i, r) {
        t.initController(e), e.tweetTranslate = {
            like: a.instant("tweet.like"),
            comments: a.instant("tweet.comments"),
            comment: a.instant("tweet.comment"),
            share: a.instant("tweet.share"),
            tweetName: a.instant("tweet.tweetName")
        }, e.moreTweet = !0;
        var l = {refresh: "refresh", loadMore: "loadMore"};
        e.options = {pageNumber: 0, pageSize: 10, type: l.loadMore}, e.list = [], e.getData = function () {
            e.options.type === l.refresh && e.showLoading(), i(function () {
                n.getTweetByPagination(e.options).then(function (t) {
                    t.length ? (e.options.pageNumber++, e.list = e.list.concat(t), n.setList(e.list), e.options.type === l.loadMore ? e.$broadcast("scroll.infiniteScrollComplete") : (e.$broadcast("scroll.refreshComplete"), e.moreTweet = !0, e.hideLoading()), r.resize()) : (e.moreTweet = !1, e.hideLoading())
                }, function () {
                    e.moreContact = !1, e.hideLoading()
                })
            }, 3e3)
        }, e.loadMore = function () {
            e.options.type = l.loadMore, e.getData()
        }, e.refresh = function () {
            e.moreTweet = !1, e.list = [], e.options = {pageNumber: 0, pageSize: 10, type: l.refresh}, e.getData()
        }, e.modalFn = {
            openModal: function () {
                o.openModal({templateUrl: "js/tweet/templates/add-tweet.html", scope: e})
            }, hideModal: o.hideModal
        }, e.$on("$destroy", function () {
            e.modal.remove()
        })
    }])
}(angular);
!function (t) {
    "use strict";
    t.module(globalSettings.appName).controller("tweetDetailController", ["$scope", "$stateParams", "tweetService", "$ionicHistory", "$state", "tweetCommentService", "$ionicActionSheet", "$timeout", function (t, e, n, o, c, i, a, m) {
        var s = e.tweetId;
        s || c.go("tab.tweet"), t.tweet = n.getTweetById(parseInt(s)), t.comments = [], t.hasComments = t.comments.length;
        var l = function () {
            t.tweet = n.getTweetById(parseInt(s)), i.getCommentByTweetId(t.tweet.id).then(function (e) {
                t.comments = e, t.hasComments = t.comments.length
            }, function (t) {
            })
        };
        t.addComment = function () {
        }, t.replyComment = function () {
            var t = a.show({
                buttons: [{text: "Reply"}, {text: "Copy"}], cancelText: "Cancel", cancel: function () {
                }, buttonClicked: function (t) {
                    return console.log(t), !0
                }
            });
            m(function () {
                t()
            }, 2e3)
        }, t.back = function () {
            c.go("tab.tweet")
        }, l()
    }])
}(angular);
!function (e) {
    "use strict";
    e.module(globalSettings.appName).factory("contactService", function () {
        var e = [{
            id: 0,
            name: "Ben Sparrow",
            lastText: "You on your way?",
            face: "https://pbs.twimg.com/profile_images/514549811765211136/9SgAuHeY.png"
        }, {
            id: 1,
            name: "Max Lynx",
            lastText: "Hey, it's me",
            face: "https://avatars3.githubusercontent.com/u/11214?v=3&s=460"
        }, {
            id: 2,
            name: "Adam Bradleyson",
            lastText: "I should buy a boat",
            face: "https://pbs.twimg.com/profile_images/479090794058379264/84TKj_qa.jpeg"
        }, {
            id: 3,
            name: "Perry Governor",
            lastText: "Look at my mukluks!",
            face: "https://pbs.twimg.com/profile_images/598205061232103424/3j5HUXMY.png"
        }, {
            id: 4,
            name: "Mike Harrington",
            lastText: "This is wicked good ice cream.",
            face: "https://pbs.twimg.com/profile_images/578237281384841216/R3ae1n61.png"
        }];
        return {
            all: function () {
                return e
            }, remove: function (t) {
                e.splice(e.indexOf(t), 1)
            }, get: function (t) {
                for (var a = 0; a < e.length; a++)if (e[a].id === parseInt(t))return e[a];
                return null
            }
        }
    })
}(angular);
!function (t) {
    "use strict";
    t.module(globalSettings.appName).controller("contactDetailController", ["$scope", "$stateParams", "contactService", "$state", function (t, c, a, o) {
        t.contact = a.get(c.contactId), t.back = function () {
            o.go("tab.contacts")
        }
    }])
}(angular);
!function (t) {
    "use strict";
    t.module(globalSettings.appName).controller("contactsController", ["$scope", "contactService", "$translate", function (t, c, a) {
        t.contactsTranslate = {
            contactsName: a.instant("contacts.contactsName"),
            search: a.instant("contacts.search")
        }, t.contacts = c.all(), t.remove = function (t) {
            c.remove(t)
        }
    }])
}(angular);
!function (t) {
    "use strict";
    t.module(globalSettings.appName).controller("settingController", ["$scope", "localStorageService", "$translate", "basicControllerService", "$state", function (t, e, n, s, a) {
        s.initController(t), t.setting = {
            userName: "",
            settingName: n.instant("setting.settingName"),
            feekback: n.instant("setting.feekback"),
            update: n.instant("setting.update"),
            language: n.instant("setting.language"),
            about: n.instant("setting.about"),
            logout: n.instant("setting.logout"),
            systemInfo: n.instant("common.systemInfo")
        };
        var o = e.getUserInfo();
        o && (t.setting.userName = o.userName), t.update = function () {
            t.showMessage(t.setting.systemInfo, "current version is 0.0.1")
        }, t.logout = function () {
            a.go("login")
        }, t.about = function () {
            t.showMessage(t.setting.systemInfo, "Jackey Li \n Github:https://github.com/Jackey-Sparrow")
        }
    }])
}(angular);